---

- hosts: all
  gather_facts: True
  remote_user: root

  vars_files:
    - vars/main.yml
    - vars/supervisor.yml
    - vars/app.yml
    - vars/php.yml

  roles:
    #    - name: user
    #      remote_user: "{{ test_user | success | ternary(omit, 'root') }}"
    #      tags: user

    #    - name: ssh
    #      remote_user: "{{ ansible_user }}"
    #      tags: ssh


    - name: geerlingguy.repo-remi
      when: ansible_os_family == 'RedHat'

    - name: essentials
      tags: essentials

    - name: mongodb
      tags: mongodb

    - name: geerlingguy.git
      become: true

    - name: timezone
      tags: timezone

    #    - name: geerlingguy.firewall
    #      tags: firewall
    #      become: true

    - name: fail2ban
      tags: fail2ban

    - name: kamaln7.swapfile
      tags: swapfile
      become: true
      ignore_errors: true


    - name: geerlingguy.nodejs
      tags: nodejs
      become: true

    - name: geerlingguy.nginx
      tags: nodejs
      become: true

    - name: geerlingguy.php-versions
      tags: php
      become: true
    - name: geerlingguy.php
      tags: php
      become: true

    - name: geerlingguy.composer
      tags: composer
      become: true

    - name: geerlingguy.pip
      tags: pip
      become: true

    - name: geerlingguy.supervisor
      tags: supervisor
      become: true
      ignore_errors: true

    - name: geerlingguy.mysql
      tags: mysql
      become: true

    - name: geerlingguy.redis
      tags: redis
      become: true

    - name: manala.beanstalkd
      tags: beanstalkd
      become: true

  #    - name: geerlingguy.memcached
  #      tags: memcached
  #      become: true

  #  tasks:
  #    - include: tasks/setup_deploy_folder_structure.yml
  #      tags: setup_deploy

  pre_tasks:
    #    - name: Check platform support
    #      fail: msg="Distro {{ ansible_distribution }} not supported"
    #      when: ansible_os_family not in ['Debian', 'RedHat']

    - name: Check if user specified in config is installed
      local_action: "command ssh -q -o BatchMode=yes -o ConnectTimeout=3 {{ inventory_hostname }} 'echo ok'"
      register: test_user
      ignore_errors: true
      changed_when: false

    - name: Update all packages
      #      remote_user: "{{ test_user | success | ternary(omit, 'root') }}"
      apt:
        update_cache: yes
        upgrade: safe
        autoremove: yes
      become: true

    - name: Update apt cache.
      apt: update_cache=true cache_valid_time=600
      when: ansible_os_family == 'Debian'
      changed_when: false
      become: true
